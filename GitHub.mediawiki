= Shortcuts =
[https://help.github.com/en/github/getting-started-with-github/keyboard-shortcuts Here]

= General =
List:
* [https://gist.github.com/piscisaureus/3342247 checkout PR branch]
* clone wiki <code>git clone git@github.com:<USER_NAME>/<REPO_NAME>.wiki.git</code>

= Repositories naming convention =
As [https://en.wikipedia.org/wiki/Letter_case#Special_case_styles <code>kebab-case</code>] is used for web (URL, HTML and CSS class and ids), let's use this, as github projects are referenced to by URLs.

= Create repo =
Use these settings if collaborating:
* disable push on master
* require PR

= Security =
[https://security.stackexchange.com/questions/120706/why-would-i-sign-my-git-commits-with-a-gpg-key-when-i-already-use-an-ssh-key-to From SO]
<blockquote>
When you authenticate to Github with your SSH key, that authentication doesn't become part of the repository in any meaningful or lasting way. It causes Github to give you access for the moment, but it doesn't prove anything to anyone who is not Github.
</blockquote> 

If additional security is needed, use GPG:
* setup [https://git-scm.com/book/en/v2/Git-Tools-Signing-Your-Work GPG] on your machine
* on repository settings, enable "require signed commits"

= Synchronise fork =
[https://ardalis.com/syncing-a-fork-of-a-github-repository-with-upstream  From here ]

Upstream = source repository, the one that has been forked

Steps:
* add upstream (once): <code> git remote add upstream <GIT-URL> </code>
* fetch update : <code> git fetch upstream </code>
* move to master : <code> git checkout master</code>
* merge : <code> git merge upstream/master</code>

= Manage several repo with several identities =
List:
* - update each repo <code> .git/config </code> to include your username in URL in origin url <code> url = git@github.com-GradedJestRisk:GradedJestRisk/git-training </code>
* - modify <code>/.ssh/config </code>
<pre>
Host github.com-GradedJestRisk
    Hostname github.com
    IdentityFile <PATH_TO_FILE>
    User git
    IdentitiesOnly yes
</pre>
